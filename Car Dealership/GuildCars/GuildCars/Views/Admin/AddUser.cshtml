
@model GuildCars.Models.ViewModels.Users

@{
    ViewBag.Title = "AddUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var context = new GuildCars.Models.ApplicationDbContext();
    var rolesList = (from userRole in context.Roles
                     join role in context.Roles on userRole.Id
                     equals role.Id
                     select role.Name).ToList();
}
<style>
    /*
label, input {
        display: block;
    }
    */

    .col-med-6 {
        margin-right: 40px;
    }
</style>

<h2>Add User</h2>


<div class="container" id="errors">
    <p id="confError"></p>
    @Html.ValidationSummary("", new { @class = "text-danger" })
</div>
<div class="container">
    @using (Html.BeginForm("AddUser", "Admin"))
    {
        @Html.AntiForgeryToken()
    <div class="row">
        <div class="form-group">
            @Html.LabelFor(m => m.firstName, new { @class = "col-md-6 control-label" })
            <div class="col-med-6">
                @Html.TextBoxFor(m => m.firstName, new { @class = "form-control", id = "fName" })
                @Html.ValidationMessageFor(m => m.firstName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.lastName, new { @class = "col-md-6 control-label" })
            <div class="col-med-6">
                @Html.TextBoxFor(m => m.lastName, new { @class = "form-control", id = "lName" })
                @Html.ValidationMessageFor(m => m.lastName)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-6 control-label" })
            <div class="col-med-6">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", id = "email" })
                @Html.ValidationMessageFor(m => m.Email)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Role, new { @class = "col-md-6 control-label" })
            <div class="col-med-6">
                @Html.DropDownListFor(m => m.Role, new SelectList(rolesList))
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            @Html.LabelFor(m => m.password, new { @class = "col-md-6 control-label" })
            <div class="col-med-6">
                @Html.PasswordFor(m => m.password, new { @class = "form-control", id = "pwid" })
                @Html.ValidationMessageFor(m => m.password)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.confPassword, new { @class = "col-md-6 control-label" })
            <div class="col-med-6">
                @Html.PasswordFor(m => m.confPassword, new { @class = "form-control", id = "confPw" })
                @Html.ValidationMessageFor(m => m.confPassword)
            </div>
        </div>
    </div>
    <div class="row">
        <button type="submit" class="btn btn-sm btn-primary" id="submitButton">Save</button>
    </div>
    }

</div>

<script>
 /*   function emailIsValid(email) {
        return /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/.test(email);
    }

    $(document).ready(function () {

        const errorElement = document.getElementById('confError');
        const button = document.getElementById("submitButton");

        button.addEventListener('submit', (e) => {
            let messages = [];
            if ($("#pwid").val() != $("#confpw").val()) {
                messages.push("Password and confirmation do not match");
            }
            if ($("#fName").val() == "" || $("#lName").val() == "") {
                messages.push("Please enter your name");
            }
            if ($("#email").val() == "") {
                messages.push("Please enter your email");
            }
            if (!emailIsValid(email.value)) {
                messages.push('Email is in an invalid format');
            }
            if (messages.length > 0) {
                e.preventDefault();
                errorElement.innerHTML = messages.join('. \n');
            }
        });

        $("#confpw").change(function () {
            if ($("#pwid").val() != $("#confpw").val()) {
                document.getElementById("confError").innerHTML = "Password and confirmation do not match";
            }
            else {
                $("#confError").empty();
            }
        });
    });*/


</script>



